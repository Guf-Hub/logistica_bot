#!/usr/bin/env python3
# -*- coding: utf-8 -*-
from aiogram import types
from database.db import db
from services.config import Settings
from services.keybords import *
from services.helper import help_msg

tg = Settings().tg


async def start(message: types.Message):
    if not message.chat.type == 'private':
        return

    user_id = message.from_user.id
    if message.text == '/myid':
        await message.answer(f'–¢–≤–æ–π Telegram id: {user_id}')

    if message.text == '/start':
        if user_id in tg.ADMINS or (
                await db.is_user_exist(user_id) and user_id in set(x[0] for x in await db.get_active())):
            if user_id in tg.ADMINS:
                await message.answer('–ú–µ–Ω—é—à–µ—á–∫–∞ üëá', reply_markup=admin_menu)
            elif await db.is_logist(user_id):
                await message.answer('–ú–µ–Ω—é—à–µ—á–∫–∞ üëá', reply_markup=logist_menu)
            else:
                if user_id not in set(x[0] for x in await db.open_shift()):
                    await message.answer('–ú–µ–Ω—é—à–µ—á–∫–∞ üëá', reply_markup=start_menu)
                else:
                    await message.reply('–ú–µ–Ω—é—à–µ—á–∫–∞ üëá', reply_markup=queue_menu)
        else:
            """–î–æ–±–∞–≤–ª–µ–Ω–∏–µ –Ω–æ–≤–≥–æ —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–∞"""
            username = message.from_user.username
            name = message.from_user.full_name
            first_name = message.from_user.first_name
            last_name = message.from_user.last_name

            if not name:
                await message.answer("‚ùå –£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ –ò–º—è –∏ –§–∞–º–∏–ª–∏—é –≤ –Ω–∞—Å—Ç—Ä–æ–π–∫–∞—Ö –ø—Ä–æ—Ñ–∏–ª—è!!!")
                return

            if not first_name:
                await message.answer("‚ùå –£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ –ò–º—è –≤ –Ω–∞—Å—Ç—Ä–æ–π–∫–∞—Ö –ø—Ä–æ—Ñ–∏–ª—è!!!")
                return

            if not last_name:
                await message.answer("‚ùå –£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ –§–∞–º–∏–ª–∏—é –≤ –Ω–∞—Å—Ç—Ä–æ–π–∫–∞—Ö –ø—Ä–æ—Ñ–∏–ª—è!!!")
                return

            if not username:
                await message.answer("‚ùå –£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ Username (5-32 —Å–∏–º–≤–æ–ª–æ–≤) –≤ –Ω–∞—Å—Ç—Ä–æ–π–∫–∞—Ö –ø—Ä–æ—Ñ–∏–ª—è!!!")
                return

            await db.insert('users', [{
                'user_id': user_id,
                'username': username,
                'first_name': first_name.strip(),
                'last_name': last_name.strip(),
                'position': '–ö—É—Ä—å–µ—Ä',
                'status': 1
            }])

            welcome_msg = f'–ü—Ä–∏–≤–µ—Ç, {first_name.strip()} üëã\n' \
                          f'–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ –∫–æ–º–∞–Ω–¥—É.\n' \
                          f'–Ø –±–æ—Ç –ø–æ–º–æ—â–Ω–∏–∫, –∑–∞–ø–∏—à—É —Ä–∞–±–æ—á—É—é –∏–Ω—Ñ—É.\n' \
                          f'–ù–∞–∂–º–∏—Ç–µ –æ–∫—Ç—Ä—ã—Ç—å —Å–º–µ–Ω—É, —á—Ç–æ–±—ã –≤—Å—Ç–∞–≤—å –≤ –æ—á–µ—Ä–µ–¥—å üëá'

            await message.answer(welcome_msg, reply_markup=start_menu)

    if user_id in tg.ADMINS or user_id in set(x[0] for x in await db.get_active()):
        """–ü–æ–¥—Å–∫–∞–∑–∫–∞"""
        if message.text == '/help':
            if user_id in tg.ADMINS:
                await message.answer(help_msg['admin'], disable_web_page_preview=True)
            elif await db.is_logist(user_id):
                await message.answer(help_msg['logist'], disable_web_page_preview=True)
            else:
                await message.answer(help_msg['staff'], disable_web_page_preview=True)
        """–ü–æ–ª—É—á–∏—Ç—å —Ñ–∞–π–ª –ª–æ–≥–∞ –æ—à–∏–±–æ–∫"""
        if message.text == '/log' and user_id in tg.ADMINS:
            await message.answer_document(open(f'app.log', 'rb'))


def register_handlers_client(dp: Dispatcher):
    dp.register_message_handler(start, commands=['start', 'myid', 'log', 'help'])
